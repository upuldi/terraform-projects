# Local .terraform directories
**/.terraform/*

# .tfstate files
# These files are used to store the state of your infrastructure.
# They may contain sensitive data, so they should not be committed to version control.
# It is best practice to use a remote backend for state storage.
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# passwords, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
# *.tfvars
# *.tfvars.json

# Exception: Allow environment-specific tfvars files for workspace management
# These files contain environment configuration and should be version controlled
!terraform.tfvars.dev
!terraform.tfvars.staging  
!terraform.tfvars.prod
!terraform.tfvars.example

# Still ignore any other tfvars files (like local testing files)
terraform.tfvars
*.auto.tfvars
*.auto.tfvars.json
*_local.tfvars

# Ignore override files as they are usually used for local testing and overriding
# values locally.
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore CLI configuration files
.terraformrc
terraform.rc

# In-progress plans
*.tfplan

# Terraform lock file
.terraform.lock.hcl

# Terraform plan files (environment-specific)
*.tfplan
dev.tfplan
staging.tfplan
prod.tfplan

# VS Code specific files
.vscode/

# Mac OS specific
.DS_Store